AWSTemplateFormatVersion: 2010-09-09
Description: >-
  nta-master

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Api:
    EndpointConfiguration: REGIONAL
    Cors:
      AllowHeaders: "'Content-Type, Authorization, nta-authority-id, username, access-token'"
      AllowMethods: "'POST,GET,PATCH,PUT,DELETE'"
      AllowOrigin: "'*'"

  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 100
    Environment:
      Variables:
        INSTITUTE_TABLE: !Ref InstituteTableDynamo

Resources:
  NtaApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Domain:
        CertificateArn: arn:aws:acm:ap-south-1:725755216375:certificate/4b62cb86-813f-49f9-b526-718c9c21ef28
        DomainName: api.nta-sys.tk
        EndpointConfiguration: REGIONAL
      Auth:
        AddDefaultAuthorizerToCorsPreflight: False
        DefaultAuthorizer: NTACognitoAuthorizer
        Authorizers:
          NTACognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-south-1:725755216375:userpool/ap-south-1_YOsP7cTUw

  StudentInstituteApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Domain:
        CertificateArn: arn:aws:acm:ap-south-1:725755216375:certificate/4b62cb86-813f-49f9-b526-718c9c21ef28
        DomainName: api.nta-sys.tk
        EndpointConfiguration: REGIONAL
      Auth:
        AddDefaultAuthorizerToCorsPreflight: False
        DefaultAuthorizer: InstituteCognitoAuthorizer
        Authorizers:
          InstituteCognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-south-1:725755216375:userpool/ap-south-1_GYBsglFix
          NTACognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-south-1:725755216375:userpool/ap-south-1_YOsP7cTUw

  GatewayResponseDefault4XX:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type, Authorization'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'POST,GET,PATCH,PUT,DELETE'"
      ResponseType: DEFAULT_4XX
      RestApiId: !Ref NtaApi

  # # NTA Section
  CreateNTAAuthorityFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.createNTAAuthorityHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA
            Method: POST
            RestApiId: !Ref NtaApi

  ListNTAAuthorityFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.listNTAAuthorityHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/authority/{id}
            Method: GET
            RestApiId: !Ref NtaApi

  ListAllNTAAuthoritiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.listAllNTAAuthoritiesHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/authority
            Method: GET
            RestApiId: !Ref NtaApi

  CreateNTAUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.createNTAUserHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/user
            Method: POST
            RestApiId: !Ref NtaApi

  deleteNTAUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.deleteNTAUserHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/user/{mobile}
            Method: DELETE
            RestApiId: !Ref NtaApi

  CheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/user/check
            Method: GET
            RestApiId: !Ref NtaApi

  SetNTAPassword:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-authority.newPasswordChallengeHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/user/challenge
            Method: POST
            RestApiId: !Ref NtaApi

  # Create NTA Masters
  CreateFeesHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.createFeesHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head
            Method: POST
            RestApiId: !Ref NtaApi

  CreateAccountHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.createAccountHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head
            Method: POST
            RestApiId: !Ref NtaApi

  CreateFeesType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.createFeeTypeHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type
            Method: POST
            RestApiId: !Ref NtaApi

  # List NTA Masters
  ListFeesHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getFeesHeadListHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head
            Method: GET
            RestApiId: !Ref NtaApi

  ListAccountsHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getAccountHeadListHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head
            Method: GET
            RestApiId: !Ref NtaApi

  ListFeesType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getFeeTypeListHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type
            Method: GET
            RestApiId: !Ref NtaApi

  ListInstituteType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getInstituteTypeListHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/institute/type
            Method: GET
            RestApiId: !Ref NtaApi

  # Get NTA Masters By Id
  GetFeesHeadByIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getFeesHeadMasterByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head/{id}
            Method: GET
            RestApiId: !Ref NtaApi

  GetFeesTypeByIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getFeesTypeByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type/{id}
            Method: GET
            RestApiId: !Ref NtaApi

  GetAccountsHeadByIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.getAccountsHeadByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head/{id}
            Method: GET
            RestApiId: !Ref NtaApi

  # Check if NTA Masters Exist
  CheckFeesHeadExists:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.checkIfNTAFeesHeadExistsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head/check
            Method: POST
            RestApiId: !Ref NtaApi

  CheckFeesTypeExists:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.checkIfNTAFeesTypeExistsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type/check
            Method: POST
            RestApiId: !Ref NtaApi

  CheckAccountsHeadExists:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.checkIfNTAAccountsHeadExistsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head/check
            Method: POST
            RestApiId: !Ref NtaApi

  # Edit NTA Masters
  EditFeesHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.editFeesHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head/{id}
            Method: POST
            RestApiId: !Ref NtaApi

  EditFeesType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.editFeesTypeHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type/{id}
            Method: POST
            RestApiId: !Ref NtaApi

  EditAccountsHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.editAccountsHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head/{id}
            Method: POST
            RestApiId: !Ref NtaApi

  # Delete NTA Masters
  DeleteFeesHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.deleteFeesHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head/{id}
            Method: DELETE
            RestApiId: !Ref NtaApi

  DeleteFeesType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.deleteFeesTypeHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type/{id}
            Method: DELETE
            RestApiId: !Ref NtaApi

  DeleteAccountsHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.deleteAccountsHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head/{id}
            Method: DELETE
            RestApiId: !Ref NtaApi

  # Status Change of NTA Masters
  StatusChangeFeesHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.statusChangeFeesHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/head/{id}
            Method: PATCH
            RestApiId: !Ref NtaApi

  StatusChangeFeesType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.statusChangeFeesTypeHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/fees/type/{id}
            Method: PATCH
            RestApiId: !Ref NtaApi

  StatusChangeAccountsHead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-masters.statusChangeAccountsHeadHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /NTA/masters/accounts/head/{id}
            Method: PATCH
            RestApiId: !Ref NtaApi

  # # End NTA

  # # Institute Section
  CreateInstituteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.createInstituteUserHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/user
            Method: POST
            RestApiId: !Ref NtaApi

  InstCreateFeesGroup:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.createFeesGroupHandler
      Description: Create Fees Group.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstCreateFeesMaster:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.createFeesMasterHandler
      Description: Create Fees Master.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstCreateCourseFees:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.createCourseFeesHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstListFeesGroup:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listFeesGroupHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListFeesMaster:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listFeesMasterHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListCourseFees:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listCourseFeesHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstGetFeesGroupById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getFeesGroupByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstGetFeesMasterById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getFeesMasterByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstGetCourseFeesById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getCourseFeesByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstEditFeesGroupById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.editFeesGroupByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group/{id}
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstEditFeesMasterById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.editFeesMasterByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master/{id}
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstEditCourseFeesById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.editCourseFeesByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees/{id}
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstStatusChangeFeesGroupById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.statusChangeFeesGroupByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group/{id}
            Method: PATCH
            RestApiId: !Ref StudentInstituteApi

  InstStatusChangeFeesMasterById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.statusChangeFeesMasterByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master/{id}
            Method: PATCH
            RestApiId: !Ref StudentInstituteApi

  InstStatusChangeCourseFeesById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.statusChangeCourseFeesByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees/{id}
            Method: PATCH
            RestApiId: !Ref StudentInstituteApi

  InstDeleteFeesGroupById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.deleteFeesGroupByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/group/{id}
            Method: DELETE
            RestApiId: !Ref StudentInstituteApi

  InstDeleteFeesMasterById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.deleteFeesMasterByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/fees/master/{id}
            Method: DELETE
            RestApiId: !Ref StudentInstituteApi

  InstDeleteCourseFeesById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.deleteCourseFeesByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/course-fees/{id}
            Method: DELETE
            RestApiId: !Ref StudentInstituteApi

  InstListConcessionApplications:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listConcessionApplicationsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/concession
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListConcessionApplicationById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getConcessionApplicationByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/concession/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstProcessConcessionApplicationById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.processConcessionApplicationByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/concession/{id}
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstListLateFineApplications:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listLatefineApplicationsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/latefine
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListLateFineApplicationById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getLatefineApplicationByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/latefine/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstProcessLateFineApplicationById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.processLatefineApplicationByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/applications/latefine/{id}
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstListStudentFees:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listStudentFeesHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/student-fees
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListLedger:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listLedgerHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/ledger
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListLedgerById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.getLedgerByIdHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/ledger/{id}
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListSpecialFees:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listSpecialFeesHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/special-fees
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstListSettingsPayment:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listSettingsPaymentHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/settings/payment
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstSetSettingsPayment:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.setSettingsPaymentHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/settings/payment
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  InstListSettingsApplicationUsers:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.listSettingsApplicationUserLevelsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/settings/application
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  InstSetSettingsApplicationUsers:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-institute.setSettingsApplicationUserLevelsHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /institute/settings/application
            Method: POST
            RestApiId: !Ref StudentInstituteApi
  # # End Institute Section

  # # Student Section
  CreateStudentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.createStudentHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/user
            Method: POST
            RestApiId: !Ref NtaApi

  deleteStudentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.deleteStudentHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/user/{mobile}
            Method: DELETE
            RestApiId: !Ref NtaApi

  StudentGetProfile:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/profile
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  StudentGetPaymentHistory:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/payment/history
            Method: GET
            RestApiId: !Ref StudentInstituteApi

  StudentPayNow:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/payment/pay-now
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  StudentApplicationConcession:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/application/concession
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  StudentApplicationLatefine:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/nta-student.checkTokenHandler
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /student/application/latefine
            Method: POST
            RestApiId: !Ref StudentInstituteApi

  # # End Student Section

  # Tables
  InstituteTableDynamo:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'tableType'
          AttributeType: 'S'
        - AttributeName: 'id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'tableType'
          KeyType: 'HASH'
        - AttributeName: 'id'
          KeyType: 'RANGE'
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: InstituteTableDynamo

  ErrorsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: ErrorsTable

  # TransactionsTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     PrimaryKey:
  #       Name: id
  #       Type: String
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 2
  #       WriteCapacityUnits: 2
  #     TableName: TransactionsTable
  # StudentsTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     PrimaryKey:
  #       Name: id
  #       Type: String
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 2
  #       WriteCapacityUnits: 2
  #     TableName: StudentsTable
  # FeesTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     PrimaryKey:
  #       Name: id
  #       Type: String
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 2
  #       WriteCapacityUnits: 2
  #     TableName: FeesTable
  # CourseTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     PrimaryKey:
  #       Name: id
  #       Type: String
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 2
  #       WriteCapacityUnits: 2
  #     TableName: CourseTable

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${NtaApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
